name: Release alpha

on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - '**.spec.ts'
      - '.gitignore'
      - '.github/**'

jobs:
  draft:
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.build-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Create Alpha Release
        run: |
          git config --global user.email "bot@pomelloapp.com"
          git config --global user.name "pomello[bot]"
          npx standard-version --prerelease alpha --skip.tag --skip.changelog
          git push --follow-tags origin main

      - name: Get New Version
        id: version
        run: echo "::set-output name=build-version::$(node -e "try{console.log(require('./package.json').version)}catch(e){console.error(e);process.exit(1)}")"

  create-artifacts:
    needs: draft

    uses: ./.github/workflows/create-artifacts.yml
    with:
      APP_VERSION: ${{ needs.draft.outputs.version }}
    secrets:
      APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID}}
      APPLE_API_KEY_ISSUER: ${{ secrets.APPLE_API_KEY_ISSUER}}
      APPLE_API_KEY: ${{ secrets.APPLE_API_KEY}}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
      OSX_CODE_SIGN_CERT_PASSWORD: ${{ secrets.OSX_CODE_SIGN_CERT_PASSWORD}}
      OSX_CODE_SIGN_CERT: ${{ secrets.OSX_CODE_SIGN_CERT}}
      S3_RELEASE_BUCKET: ${{ secrets.S3_RELEASE_BUCKET}}
      VITE_AUTO_UPDATE_URL: ${{ secrets.VITE_AUTO_UPDATE_URL}}
      WIN_CODE_SIGN_CERT_PASSWORD: ${{ secrets.WIN_CODE_SIGN_CERT_PASSWORD }}
      WIN_CODE_SIGN_CERT: ${{ secrets.WIN_CODE_SIGN_CERT }}
